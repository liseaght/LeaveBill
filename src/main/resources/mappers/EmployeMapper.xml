<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xin.snowsteps.dao.EmployeMapper" >
  <resultMap id="BaseResultMap" type="xin.snowsteps.pojo.Employe" >
    <constructor >
      <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pwd" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="manager_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, name, pwd, email, role, manager_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employe
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employe
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xin.snowsteps.pojo.Employe" >
    insert into employe (user_id, name, pwd, 
      email, role, manager_id
      )
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{managerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="xin.snowsteps.pojo.Employe" >
    insert into employe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="managerId != null" >
        manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.snowsteps.pojo.Employe" >
    update employe
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null" >
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.snowsteps.pojo.Employe" >
    update employe
    set name = #{name,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employe
    where name = #{name,jdbcType=VARCHAR}
  </select>
</mapper>